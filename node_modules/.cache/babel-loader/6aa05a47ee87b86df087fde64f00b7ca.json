{"ast":null,"code":"import _defineProperty from \"/Users/josephbianchi/Desktop/udemy/react/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport streams from '../apis/streams';\nimport history from '../history';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await streams.post('/streams', _objectSpread({}, formValues, {\n      userId\n    }));\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    });\n    history.push('/');\n  };\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const response = await streams.get('/streams');\n    dispatch({\n      type: FETCH_STREAMS,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = await streams.get(\"/streams/\".concat(id));\n    dispatch({\n      type: FETCH_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => {\n  return async dispatch => {\n    const response = await streams.put(\"/streams/\".concat(id), formValues);\n    dispatch({\n      type: EDIT_STREAM,\n      payload: response.data\n    });\n    history.push('/');\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(\"/streams/\".concat(id));\n    dispatch({\n      type: DELETE_STREAM,\n      payload: id\n    });\n  };\n};","map":{"version":3,"sources":["/Users/josephbianchi/Desktop/udemy/react/streams/client/src/actions/index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,WAPF,QAQO,SARP;AAUA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAIC,UAAD,IAAgB;AAC1C,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA,UAC3BP,MAD2B,GAChBO,QAAQ,GAAGC,IADK,CAC3BR,MAD2B;AAEnC,UAAMS,QAAQ,GAAG,MAAMnB,OAAO,CAACoB,IAAR,CAAa,UAAb,oBAA8BL,UAA9B;AAA0CL,MAAAA;AAA1C,OAAvB;AAEAM,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEP,aAAR;AAAuBQ,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACApB,IAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACD,GAND;AAOD,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO,MAAOP,QAAP,IAAoB;AACzB,UAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,CAAY,UAAZ,CAAvB;AAEAR,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEN,aAAR;AAAuBO,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ;AACjC,SAAO,MAAOV,QAAP,IAAoB;AACzB,UAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,oBAAwBE,EAAxB,EAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEL,YAAR;AAAsBM,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,KAAD,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB;AAC5C,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAAC4B,GAAR,oBAAwBF,EAAxB,GAA8BX,UAA9B,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEH,WAAR;AAAqBI,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,KAAD,CAAR;AACApB,IAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACD,GALD;AAMD,CAPM;AASP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ;AAClC,SAAO,MAAOV,QAAP,IAAoB;AACzB,UAAMhB,OAAO,CAAC8B,MAAR,oBAA2BJ,EAA3B,EAAN;AAEAV,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEJ,aAAR;AAAuBK,MAAAA,OAAO,EAAEc;AAAhC,KAAD,CAAR;AACD,GAJD;AAKD,CANM","sourcesContent":["import streams from '../apis/streams';\nimport history from '../history';\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM\n} from './types';\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n}\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\n\nexport const createStream = (formValues) => {\n  return async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await streams.post('/streams', { ...formValues, userId });\n\n    dispatch({ type: CREATE_STREAM, payload: response.data });\n    history.push('/');\n  }\n}\n\nexport const fetchStreams = () => {\n  return async (dispatch) => {\n    const response = await streams.get('/streams');\n\n    dispatch({ type: FETCH_STREAMS, payload: response.data });\n  }\n};\n\nexport const fetchStream = (id) => {\n  return async (dispatch) => {\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch({ type: FETCH_STREAM, payload: response.data });\n  }\n}\n\nexport const editStream = (id, formValues) => {\n  return async (dispatch) => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n\n    dispatch({ type: EDIT_STREAM, payload: response.data });\n    history.push('/');\n  }\n};\n\nexport const deleteStream = (id) => {\n  return async (dispatch) => {\n    await streams.delete(`/streams/${id}`);\n\n    dispatch({ type: DELETE_STREAM, payload: id });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}