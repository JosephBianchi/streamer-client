{"ast":null,"code":"var _jsxFileName = \"/Users/josephbianchi/Desktop/udemy/react/streams/client/src/components/streams/stream_delete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport history from '../../history';\nimport Modal from '../modal';\n\nclass StreamDelete extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderActions = () => {\n      const id = this.props.match.params.id;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.props.deleteStream(),\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Link, {\n        to: \"/streams\",\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Cancel\"));\n    };\n\n    this.renderContent = () => {\n      if (!this.props.stream) {\n        return \"Are you sure you want to delete this stream?\";\n      }\n\n      return \"Are you sure you want to delete the stream with title: \".concat(this.props.stream.title);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/josephbianchi/Desktop/udemy/react/streams/client/src/components/streams/stream_delete.js"],"names":["React","connect","fetchStream","deleteStream","Link","history","Modal","StreamDelete","Component","renderActions","id","props","match","params","renderContent","stream","title","componentDidMount","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAMzCC,aANyC,GAMzB,MAAM;AACpB,YAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAnC;AACA,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWR,YAAX,EAAvB;AAAkD,QAAA,SAAS,EAAC,oBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAoB,QAAA,SAAS,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD,KAdwC;;AAAA,SAgBzCW,aAhByC,GAgBzB,MAAM;AACpB,UAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAwB;AACtB,eAAO,8CAAP;AACD;;AACD,8EAAiE,KAAKJ,KAAL,CAAWI,MAAX,CAAkBC,KAAnF;AACD,KArBwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL,CAAWT,WAAX,CAAuB,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAA/C;AACD;;AAmBDQ,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAE,KAAKJ,aAAL,EAFX;AAGE,MAAA,OAAO,EAAE,KAAKL,aAAL,EAHX;AAIE,MAAA,SAAS,EAAE,MAAMJ,OAAO,CAACc,IAAR,CAAa,GAAb,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAhCwC;;AAmC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEP,IAAAA,MAAM,EAAEM,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBH,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeT,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAwDI,YAAxD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nimport history from '../../history';\nimport Modal from '../modal';\n\nclass StreamDelete extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id)\n  }\n\n  renderActions = () => {\n    const id = this.props.match.params.id;\n    return (\n      <React.Fragment>\n        <button onClick={() => this.props.deleteStream()} className=\"ui button negative\">Delete</button>\n        <Link to=\"/streams\" className=\"ui button\">Cancel</Link>\n      </React.Fragment>\n    )\n  }\n\n  renderContent = () => {\n    if (!this.props.stream) {\n      return \"Are you sure you want to delete this stream?\"\n    }\n    return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\n  }\n\n  render() {\n    return (\n      <Modal\n        title=\"Delete Stream\"\n        content={this.renderContent()}\n        actions={this.renderActions()}\n        onDismiss={() => history.push('/')}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] }\n};\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);\n"]},"metadata":{},"sourceType":"module"}