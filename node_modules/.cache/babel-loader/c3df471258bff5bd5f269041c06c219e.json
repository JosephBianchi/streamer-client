{"ast":null,"code":"var _jsxFileName = \"/Users/josephbianchi/Desktop/udemy/react/streams/client/src/components/google_auth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      window.gapi.load('client:auth2', () => {\n        window.gapi.client.init({\n          clientId: '537715591063-agld2dkv3k4jets1g1k0c5ubsq2ie7iu.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.setState({\n            isSignedIn: this.auth.isSignedIn.get()\n          });\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n      });\n    };\n\n    this.renderAuthButton = () => {\n      if (this.props.isSignedIn === null) {\n        return null;\n      } else if (this.props.isSignedIn) {\n        return React.createElement(\"button\", {\n          onClick: this.onSignOutClick,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), \"Sign Out\");\n      } else {\n        return React.createElement(\"button\", {\n          onClick: this.onSignInClick,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), \"Sign In\");\n      }\n    };\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/josephbianchi/Desktop/udemy/react/streams/client/src/components/google_auth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","isSignedIn","get","listen","onAuthChange","renderAuthButton","props","onSignOutClick","onSignInClick","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAEvCC,iBAFuC,GAEnB,MAAM;AACxBC,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,UAAAA,QAAQ,EAAE,0EADY;AAEtBC,UAAAA,KAAK,EAAE;AAFe,SAAxB,EAICC,IAJD,CAIM,MAAM;AACV,eAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,eAAKC,QAAL,CAAc;AAAEC,YAAAA,UAAU,EAAE,KAAKJ,IAAL,CAAUI,UAAV,CAAqBC,GAArB;AAAd,WAAd;AACA,eAAKL,IAAL,CAAUI,UAAV,CAAqBE,MAArB,CAA4B,KAAKC,YAAjC;AACD,SARD;AASD,OAVD;AAWD,KAdsC;;AAAA,SAgBvCC,gBAhBuC,GAgBpB,MAAM;AACvB,UAAI,KAAKC,KAAL,CAAWL,UAAX,KAA0B,IAA9B,EAAoC;AAClC,eAAO,IAAP;AACD,OAFD,MAEO,IAAI,KAAKK,KAAL,CAAWL,UAAf,EAA2B;AAChC,eACE;AAAQ,UAAA,OAAO,EAAE,KAAKM,cAAtB;AAAsC,UAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,aADF;AAMD,OAPM,MAOA;AACL,eACE;AAAQ,UAAA,OAAO,EAAE,KAAKC,aAAtB;AAAqC,UAAA,SAAS,EAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,YADF;AAMD;AACF,KAlCsC;;AAAA,SAoCvCJ,YApCuC,GAoCvBH,UAAD,IAAgB;AAC7B,UAAIA,UAAJ,EAAgB;AACd,aAAKK,KAAL,CAAWtB,MAAX;AACD,OAFD,MAEO;AACL,aAAKsB,KAAL,CAAWrB,OAAX;AACD;AACF,KA1CsC;;AAAA,SA4CvCuB,aA5CuC,GA4CvB,MAAM;AACpB,WAAKX,IAAL,CAAUb,MAAV;AACD,KA9CsC;;AAAA,SAgDvCuB,cAhDuC,GAgDtB,MAAM;AACrB,WAAKV,IAAL,CAAUZ,OAAV;AACD,KAlDsC;AAAA;;AAoDvCwB,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,gBAAL,EADH,CADF;AAKD;;AA3DsC;;AA8DzC,MAAMK,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLV,IAAAA,UAAU,EAAEU,KAAK,CAACd,IAAN,CAAWI;AADlB,GAAP;AAGD,CAJD;;AAMA,eAAelB,OAAO,CACpB2B,eADoB,EAEpB;AAAE1B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  \n  componentDidMount = () => {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '537715591063-agld2dkv3k4jets1g1k0c5ubsq2ie7iu.apps.googleusercontent.com',\n        scope: 'email'\n      })\n      .then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({ isSignedIn: this.auth.isSignedIn.get() })\n        this.auth.isSignedIn.listen(this.onAuthChange)\n      })\n    });\n  }\n\n  renderAuthButton = () => {\n    if (this.props.isSignedIn === null) {\n      return null\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      )\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In\n        </button>\n      )\n    }\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn();\n    } else {\n      this.props.signOut();\n    }\n  }\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  }\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.renderAuthButton()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { signIn, signOut }\n)(GoogleAuth)\n"]},"metadata":{},"sourceType":"module"}