{"ast":null,"code":"var _jsxFileName = \"/Users/josephbianchi/Desktop/udemy/react/streams/client/src/components/google_auth.js\";\nimport React from 'react';\nexport class GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.componentDidMount = () => {\n      window.gapi.load('client:auth2', () => {\n        window.gapi.client.init({\n          clientId: '537715591063-agld2dkv3k4jets1g1k0c5ubsq2ie7iu.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.setState({\n            isSignedIn: this.auth.isSignedIn.get()\n          });\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n      });\n    };\n\n    this.renderAuthButton = () => {\n      if (this.state.isSignedIn === null) {\n        return null;\n      } else if (this.state.isSignedIn) {\n        return React.createElement(\"button\", {\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"I am not signed in\");\n      }\n    };\n\n    this.onAuthChange = () => {\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}","map":{"version":3,"sources":["/Users/josephbianchi/Desktop/udemy/react/streams/client/src/components/google_auth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","get","listen","onAuthChange","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAC9CC,KAD8C,GACtC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADsC;;AAAA,SAE9CC,iBAF8C,GAE1B,MAAM;AACxBC,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,UAAAA,QAAQ,EAAE,0EADY;AAEtBC,UAAAA,KAAK,EAAE;AAFe,SAAxB,EAICC,IAJD,CAIM,MAAM;AACV,eAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,eAAKC,QAAL,CAAc;AAAEb,YAAAA,UAAU,EAAE,KAAKU,IAAL,CAAUV,UAAV,CAAqBc,GAArB;AAAd,WAAd;AACA,eAAKJ,IAAL,CAAUV,UAAV,CAAqBe,MAArB,CAA4B,KAAKC,YAAjC;AACD,SARD;AASD,OAVD;AAWD,KAd6C;;AAAA,SAgB9CC,gBAhB8C,GAgB3B,MAAM;AACvB,UAAI,KAAKlB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAClC,eAAO,IAAP;AACD,OAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAChC,eAAO;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,MAEA;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD;AACF,KAxB6C;;AAAA,SA0B9CgB,YA1B8C,GA0B/B,MAAM;AACnB,WAAKH,QAAL,CAAc;AACZb,QAAAA,UAAU,EAAE,KAAKU,IAAL,CAAUV,UAAV,CAAqBc,GAArB;AADA,OAAd;AAGD,KA9B6C;AAAA;;AAgC9CI,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,gBAAL,EADH,CADF;AAKD;;AAvC6C","sourcesContent":["import React from 'react';\n\nexport class GoogleAuth extends React.Component {\n  state = { isSignedIn: null }\n  componentDidMount = () => {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '537715591063-agld2dkv3k4jets1g1k0c5ubsq2ie7iu.apps.googleusercontent.com',\n        scope: 'email'\n      })\n      .then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({ isSignedIn: this.auth.isSignedIn.get() })\n        this.auth.isSignedIn.listen(this.onAuthChange)\n      })\n    });\n  }\n\n  renderAuthButton = () => {\n    if (this.state.isSignedIn === null) {\n      return null\n    } else if (this.state.isSignedIn) {\n      return <button className=\"ui red google button\"></button>\n    } else {\n      return <div>I am not signed in</div>\n    }\n  }\n\n  onAuthChange = () => {\n    this.setState({\n      isSignedIn: this.auth.isSignedIn.get()\n    })\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.renderAuthButton()}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}