{"ast":null,"code":"import streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => {\n  return async dispatch => {\n    const response = await streams.post('/streams', formValues);\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const fetchSteams = () => {\n  return async dispatch => {\n    const response = await streams.get('/streams');\n    dispatch({\n      type: FETCH_STREAMS,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = await streams.get(\"/streams/\".concat(id));\n    dispatch({\n      type: FETCH_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => {\n  return async dispatch => {\n    const response = await streams.put(\"/streams/\".concat(id), formValues);\n    dispatch({\n      type: EDIT_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {};\n};","map":{"version":3,"sources":["/Users/josephbianchi/Desktop/udemy/react/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","response","post","data","fetchSteams","get","fetchStream","id","editStream","put","deleteStream"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,WAPF,QAQO,SARP;AAUA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAIC,UAAD,IAAgB;AAC1C,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEP,aAAR;AAAuBQ,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO,MAAOJ,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACoB,GAAR,CAAY,UAAZ,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEN,aAAR;AAAuBO,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ;AACjC,SAAO,MAAOP,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACoB,GAAR,oBAAwBE,EAAxB,EAAvB;AAEAP,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEL,YAAR;AAAsBM,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAxC,KAAD,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKR,UAAL,KAAoB;AAC5C,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACwB,GAAR,oBAAwBF,EAAxB,GAA8BR,UAA9B,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEH,WAAR;AAAqBI,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAvC,KAAD,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ;AAClC,SAAO,MAAOP,QAAP,IAAoB,CAE1B,CAFD;AAGD,CAJM","sourcesContent":["import streams from '../apis/streams';\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM\n} from './types';\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n}\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\n\nexport const createStream = (formValues) => {\n  return async (dispatch) => {\n    const response = await streams.post('/streams', formValues);\n\n    dispatch({ type: CREATE_STREAM, payload: response.data })\n  }\n}\n\nexport const fetchSteams = () => {\n  return async (dispatch) => {\n    const response = await streams.get('/streams');\n\n    dispatch({ type: FETCH_STREAMS, payload: response.data });\n  }\n};\n\nexport const fetchStream = (id) => {\n  return async (dispatch) => {\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch({ type: FETCH_STREAM, payload: response.data });\n  }\n}\n\nexport const editStream = (id, formValues) => {\n  return async (dispatch) => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n\n    dispatch({ type: EDIT_STREAM, payload: response.data });\n  }\n};\n\nexport const deleteStream = (id) => {\n  return async (dispatch) => {\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}